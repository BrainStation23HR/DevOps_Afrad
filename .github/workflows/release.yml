name: Build and Deploy on Release

on:
  release:
    types: [created]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python for version check
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install httpx jq

    - name: Extract release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build Docker image
      run: docker build -t afradaidid/fastapi-weather-api:${{ env.VERSION }} .

    - name: Run container in background for version check
      run: |
        docker run -d --rm -p 8080:8000 --name temp_container afradaidid/fastapi-weather-api:${{ env.VERSION }}
        sleep 10

    - name: Check API version matches release version (normalized, warn only)
      run: |
        RELEASE_VERSION=${{ env.VERSION }}
        NORMALIZED_RELEASE_VERSION=$(echo "$RELEASE_VERSION" | sed 's/^v//')
        API_VERSION=$(curl -s http://localhost:8080/api/hello | jq -r '.version')
        echo "API version: $API_VERSION"
        echo "Release version (normalized): $NORMALIZED_RELEASE_VERSION"
        if [ "$API_VERSION" != "$NORMALIZED_RELEASE_VERSION" ]; then
          echo "WARNING: Version mismatch! API version ($API_VERSION) != Release version ($NORMALIZED_RELEASE_VERSION)"
        else
          echo "Version matches."
        fi

    - name: Stop temp container
      run: docker stop temp_container

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: docker push afradaidid/fastapi-weather-api:${{ env.VERSION }}

    - name: Deploy with zero downtime (safe remove & run)
      run: |
        docker rm -f fastapi_app || true
        docker run -d --restart always --name fastapi_app -p 8000:8000 afradaidid/fastapi-weather-api:${{ env.VERSION }}
